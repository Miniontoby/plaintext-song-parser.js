!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Song=e()}(this,(function(){"use strict";class t{constructor(e,i=null,n=null){this.content="",this.identifier=null,this.title=null,this.couplets=[],this.coupletsWithReferences=[],this.modifiers={},i&&(this.identifier=Number(i),isNaN(this.identifier)&&(this.identifier=i)),e&&""!==e&&(this.content="string"==typeof e?e:e.join("\n")),n&&""!==n&&(this.title=n),this.content&&(this.modifiers=t.getModifiersFromText(this.getLines(!0)),null===this.title&&this.modifiers?.title&&(this.title=this.modifiers.title),this.process())}get lines(){return this.getLines()}getLines(t=!1){const e=this.content?.split(/\r?\n/);if(!e)return null;const i=e.findIndex((t=>!t.startsWith("#")));return t?e.slice(0,i>-1?i:void 0):e.slice(i)}process(){if(!this.lines)return;let t=this.lines.join("\n").split("\n\n").map((t=>[t]));t=t.map((t=>t[0].split("[split]\n")));const e=t[t.length-1],i=e[e.length-1];i.endsWith("\n")&&(t[t.length-1][e.length-1]=i.slice(0,-1));const n=t.map(((t,e)=>t[0].split("\n")[0].endsWith(":")&&1==t[0].split("\n")[0].split(" ").length?[e,t]:null)).filter((t=>null!==t)),s=n.map((t=>[t[0],t[1][0].split("\n")[0].replace(":","")])),l=n.map((t=>{const e=t[1][0].split("\n");return e.splice(0,1),t[1][0]=e.join("\n"),t[1]})),r=s.map(((t,e)=>[t[0],t[1],l[e]]));let o=t.map(((t,e)=>{const i=t[0].split("\n");if(t.length>1||i.length>1)return null;const n=s.map((t=>t[1]));return n.includes(i[0])||n.includes(i[0].replace("Repeat ",""))||n.includes(i[0].replace(/\(([\w]+)( (\d+)x|)\)/,"$1"))?[e,i[0]]:null})).filter((t=>null!==t));o=o.map((t=>[t[0],t[1].replace("Repeat ","").replace(/\((\w+)( (\d+)x|)\)/,"$1$2")]));const c=o.map((t=>{const e=t[1].replace(/ (\d+)x/,""),i=Number(t[1].replace(/(\w+)( (\d+)x|)/,"$3"))||1,n=r.find((t=>t[1]==e));if(n)return[t[0],e,i,n[2]]})).filter((t=>null!==t));this.coupletsWithReferences=JSON.parse(JSON.stringify(t));for(const[e,i,n,s]of c){t[e]=s;for(let i=1;i<n;i++)t[e]=[...t[e],...s]}this.couplets=t}static getTitleFromText(e){const i=t.getModifiersFromText(e);return i?.title??null}static getModifiersFromText(t){const e="string"==typeof t?t.split(/\r?\n/):t;if(null==e)return{};const i=e?.findIndex((t=>!t.startsWith("#"))),n=e.slice(0,i>-1?i:void 0),s={};for(let t of n){t=t.replace(/^#\s*/,"");const e=/^([\w]+)\s*=\s*(.*)$/.exec(t);e?(s[e[1]]=e[2],"true"===e[2]?s[e[1]]=!0:"false"===e[2]?s[e[1]]=!1:isNaN(Number(e[2]))||(s[e[1]]=Number(e[2]))):t.includes("=")||(s.title=t)}return s}}return t}));
//# sourceMappingURL=plaintext-song-parser.min.js.map
